name: Tests

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: ['8.0', '8.1']

    name: PHP ${{ matrix.php }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: ast
        tools: composer:v2
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: v3-${{ runner.os }}-php-v${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          v3-${{ runner.os }}-php-v${{ matrix.php }}-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer update --prefer-dist --no-progress --no-suggest ${{ matrix.composerOptions }}

    - name: Code Climate Test Reporter Preparation
      if: matrix.php == '8.0'
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter;
        chmod +x ./cc-test-reporter;
        ./cc-test-reporter before-build;
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    - name: Run test suite
      run: |
        ./vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml;
        cp coverage.xml clover.xml;
        ls;

    - name: Psalm
      run: composer psalm;

    - name: Phan
      run: composer phan;

    - name: PHPCS
      run: composer cs;

    - name: PHPMD
      run: composer md;

    - name: php-cs-fixer
      if: matrix.php == '8.0'
      run: composer csf;

    - name: Code Climate Test Reporter
      if: matrix.php == '8.0'
      continue-on-error: true
      run: |
        ./cc-test-reporter after-build --exit-code 0;
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    - name: Coverage
      if: matrix.php == '8.0'
      run: |
        bash <(curl -s https://codecov.io/bash);
        composer require codacy/coverage;
        vendor/bin/codacycoverage clover coverage.xml;
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        PHP_VERSION: ${{ matrix.php }}
